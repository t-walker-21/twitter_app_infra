version: "3.9"
services:
  twitter_user_service:
    image: tevjwalker/twitter_user_service:31d05b8c0fb11635b076ddfdca6700ea55eb3296
    #build: ../twitter_clone_user_service/user_crud/
    container_name: twitter_user_service
    depends_on:
      - postgres
      - minio
    environment:
    - SQL_URL_STRING=postgresql://postgres:postgres@postgres:5432/twitter_user_service
    - JWT_SECRET=fa43lskdjfasd98f9848934
    - MINIO_ENDPOINT=minio:9000
    - MINIO_ACCESS_KEY=kxti25Wx321AGVuq8jpN
    - MINIO_SECRET_KEY=ktMHR4qSYuH2KvtqbaWL857CVkDPTfCxmrEOYcbc
      
  twitter_tweet_service:
    image: tevjwalker/twitter_tweet_service:e63872e7b94537e06b1f332dc252d121ee90406a
    #build: ../twitter_clone_tweet_service/tweet_crud/
    container_name: twitter_tweet_service
    depends_on:
      - mongo
    environment:
      - MONGODB_URI_STRING=mongodb://mongo:27017/tweets
      - JWT_SECRET=fa43lskdjfasd98f9848934

    ports:
      - "8000:8000"  # Expose the Prometheus metrics endpoint

  twitter_frontend:
    build: ../twitter_clone_frontend/
    container_name: twitter_frontend
    environment:
      - REACT_APP_API_URL=http://cheesecake.com
    restart: on-failure

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=twitter_user_service
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kong:
    image: kong:latest
    depends_on:
      - twitter_user_service
      - twitter_tweet_service
      - minio
      - twitter_frontend
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:80
    ports:
      - "80:80"  # Kong Proxy
      - "8001:8001"  # Kong Admin API
    volumes:
      - ./kong:/usr/local/kong/declarative
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  minio:
    image: minio/minio:RELEASE.2025-01-18T00-31-37Z 
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server --console-address :9001 /data
    ports:
      - "9001:9001"

    volumes:
      - minio_data:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  mongo_data:
  postgres_data:
  minio_data:
  grafana_data:
